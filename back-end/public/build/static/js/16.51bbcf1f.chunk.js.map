{"version":3,"sources":["Pages/Signin.module.css","Pages/SignIn.js"],"names":["module","exports","SignIn","state","email","password","existingUserPassword","localErrorSignIn","localErrorSignUp","onInputChange","e","setState","target","name","value","fieldsCompleted","userType","props","submitSignIn","history","push","this","serverError","isSignedIn","goBack","className","styles","signincontainer","signin","onChange","type","onClick","error","signup","Component","connect","user","loading","signedIn","dispatch","userSignIn"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,MAAQ,sBAAsB,OAAS,uBAAuB,OAAS,yB,oICSrIC,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,GACVC,qBAAsB,GACtBC,iBAAkB,KAClBC,iBAAkB,M,EAGpBC,cAAgB,SAACC,GACf,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI9BC,gBAAkB,SAACC,GACjB,GAAiB,WAAbA,EAAuB,CACzB,IAAI,EAAKb,MAAMC,OAAiC,KAAxB,EAAKD,MAAME,SAIjC,OAAO,EAAKM,SAAS,CACnBJ,iBAAkB,+BAJpB,EAAKI,SAAS,CAAEJ,iBAAkB,OAClC,EAAKU,MAAMC,aAAa,EAAKf,MAAMC,MAAO,EAAKD,MAAME,UAOzD,GAAiB,WAAbW,EAAuB,CACzB,GAAwC,KAApC,EAAKb,MAAMG,qBAGb,OAAO,EAAKK,SAAS,CACnBH,iBAAkB,+BAHpB,EAAKS,MAAME,QAAQC,KAAnB,mBAAoC,EAAKjB,MAAMG,yB,uDAS3C,IAAD,SAC2Be,KAAKJ,MAAjCK,EADC,EACDA,YADC,EACYC,YAEjBF,KAAKJ,MAAME,QAAQK,SAHd,MAWHH,KAAKlB,MALPE,EANK,EAMLA,SACAD,EAPK,EAOLA,MACAE,EARK,EAQLA,qBACAC,EATK,EASLA,iBACAC,EAVK,EAULA,iBAEF,OACE,sBAAKiB,UAAWC,IAAOC,gBAAvB,UACE,sBAAKF,UAAWC,IAAOE,OAAvB,UACE,yCACA,8CACA,uBACEC,SAAU,SAACnB,GAAD,OAAO,EAAKD,cAAcC,IACpCG,KAAK,QACLiB,KAAK,OACLhB,MAAOV,IAET,uBACA,0CACA,uBACEyB,SAAU,SAACnB,GAAD,OAAO,EAAKD,cAAcC,IACpCG,KAAK,WACLC,MAAOT,IAET,uBACA,wBAAQ0B,QAAS,kBAAM,EAAKhB,gBAAgB,WAA5C,8BAGCR,GACC,qBAAKkB,UAAWC,IAAOM,MAAvB,SAA+BzB,IAEhCe,GAAe,qBAAKG,UAAWC,IAAOM,MAAvB,SAA+BV,OAGjD,sBAAKG,UAAWC,IAAOO,OAAvB,UACE,8CACA,8CACA,uBACEH,KAAK,OACLD,SAAU,SAACnB,GAAD,OAAO,EAAKD,cAAcC,IACpCG,KAAK,uBACLC,MAAOR,IAET,uBACA,wBAAQyB,QAAS,kBAAM,EAAKhB,gBAAgB,WAA5C,8BAGCP,GACC,qBAAKiB,UAAWC,IAAOM,MAAvB,SAA+BxB,c,GA3FtB0B,aAmHNC,uBARS,SAAChC,GACvB,MAAO,CACLmB,YAAanB,EAAMiC,KAAKJ,MACxBK,QAASlC,EAAMiC,KAAKC,QACpBd,WAAYpB,EAAMiC,KAAKE,aAZA,SAACC,GAC1B,MAAO,CACLrB,aAAc,SAACd,EAAOC,GACpBkC,EAASC,YAAWpC,EAAOC,QAalB8B,CAA6CjC","file":"static/js/16.51bbcf1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"signincontainer\":\"Signin_signincontainer__1YYCb\",\"error\":\"Signin_error__1vu_i\",\"signin\":\"Signin_signin__3dptC\",\"signup\":\"Signin_signup__3NOuH\"};","/* NPM package imports */\n\nimport styles from './Signin.module.css';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n/* Action creators imports */\n\nimport { userSignIn } from '../Actions/users.js';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: '',\n    existingUserPassword: '',\n    localErrorSignIn: null,\n    localErrorSignUp: null,\n  };\n\n  onInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  fieldsCompleted = (userType) => {\n    if (userType === 'signin') {\n      if (this.state.email && this.state.password !== '') {\n        this.setState({ localErrorSignIn: null });\n        this.props.submitSignIn(this.state.email, this.state.password);\n      } else {\n        return this.setState({\n          localErrorSignIn: 'Please complete all fields',\n        });\n      }\n    }\n    if (userType === 'signup') {\n      if (this.state.existingUserPassword !== '') {\n        this.props.history.push(`/sign-up/${this.state.existingUserPassword}`);\n      } else {\n        return this.setState({\n          localErrorSignUp: 'Please complete all fields',\n        });\n      }\n    }\n  };\n\n  render() {\n    let { serverError, isSignedIn } = this.props;\n    if (isSignedIn) {\n      this.props.history.goBack();\n    }\n    let {\n      password,\n      email,\n      existingUserPassword,\n      localErrorSignIn,\n      localErrorSignUp,\n    } = this.state;\n    return (\n      <div className={styles.signincontainer}>\n        <div className={styles.signin}>\n          <h1>Sign in</h1>\n          <p>Email address</p>\n          <input\n            onChange={(e) => this.onInputChange(e)}\n            name='email'\n            type='text'\n            value={email}\n          />\n          <br />\n          <p>Password </p>\n          <input\n            onChange={(e) => this.onInputChange(e)}\n            name='password'\n            value={password}\n          />\n          <br />\n          <button onClick={() => this.fieldsCompleted('signin')}>\n            Sign in securely\n          </button>\n          {localErrorSignIn && (\n            <div className={styles.error}>{localErrorSignIn}</div>\n          )}\n          {serverError && <div className={styles.error}>{serverError}</div>}\n        </div>\n\n        <div className={styles.signup}>\n          <h1>New customer</h1>\n          <p>Email address</p>\n          <input\n            type='text'\n            onChange={(e) => this.onInputChange(e)}\n            name='existingUserPassword'\n            value={existingUserPassword}\n          />\n          <br />\n          <button onClick={() => this.fieldsCompleted('signup')}>\n            Sign in securely\n          </button>\n          {localErrorSignUp && (\n            <div className={styles.error}>{localErrorSignUp}</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitSignIn: (email, password) => {\n      dispatch(userSignIn(email, password));\n    },\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    serverError: state.user.error,\n    loading: state.user.loading,\n    isSignedIn: state.user.signedIn,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n"],"sourceRoot":""}