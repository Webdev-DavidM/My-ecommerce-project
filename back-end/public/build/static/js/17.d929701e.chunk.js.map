{"version":3,"sources":["Pages/SignUp.module.css","Pages/SignUp.js"],"names":["module","exports","SignUp","state","email","confirmEmail","password","firstName","lastName","address","error","componentDidMount","props","match","params","setState","e","this","target","name","value","console","log","preventDefault","data","signUserUp","isSignedIn","serverError","history","push","className","styles","signupcontainer","to","formcontainer","onSubmit","handleSubmit","type","onChange","handleChange","Component","connect","user","signedIn","dispatch","signUpData","userSignUp"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,MAAQ,sBAAsB,cAAgB,gC,2ICW5GC,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,aAAc,GACdC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,QAAS,GACTC,MAAO,M,EAGTC,kBAAoB,WAClB,IAAIP,EAAQ,EAAKQ,MAAMC,MAAMC,OAAOV,MACpC,EAAKW,SAAS,CAAEX,W,2DAGLY,GACXC,KAAKF,SAAL,eAAiBC,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,mCAG/BJ,GACXK,QAAQC,IAAIL,KAAKL,OACjBI,EAAEO,iBAFY,MAWVN,KAAKd,MANPC,EALY,EAKZA,MACAC,EANY,EAMZA,aACAE,EAPY,EAOZA,UACAC,EARY,EAQZA,SACAF,EATY,EASZA,SACAG,EAVY,EAUZA,QAGF,KACEL,GACAE,GACAC,GACAC,GACAC,GACiB,KAAjBJ,GAMA,OAAOY,KAAKF,SAAS,CACnBL,MAAO,+BALTO,KAAKF,SAAS,CAAEL,MAAO,OACvB,IAAIc,EAAO,CAAEpB,QAAOK,UAASH,WAAUE,WAAUD,aACjDU,KAAKL,MAAMa,WAAWD,K,+BAQhB,IAAD,OACDd,EAAUO,KAAKd,MAAfO,MADC,EAE2BO,KAAKL,MAAjCc,EAFC,EAEDA,WAAYC,EAFX,EAEWA,YAKlB,OAJID,GACFT,KAAKL,MAAMgB,QAAQC,KAAK,KAIxB,sBAAKC,UAAWC,IAAOC,gBAAvB,UACE,8CACA,4DAC0B,cAAC,IAAD,CAAMC,GAAI,WAAV,yBAA2C,OAErE,sBAAKH,UAAWC,IAAOG,cAAvB,UACE,uBAAMC,SAAU,SAACnB,GAAD,OAAO,EAAKoB,aAAapB,IAAzC,UACE,+CAEE,uBACEqB,KAAK,OACLlB,KAAK,YACLC,MAAOH,KAAKd,MAAMI,UAClB+B,SAAU,SAACtB,GAAD,OAAO,EAAKuB,aAAavB,SAGvC,8CAEE,uBACEqB,KAAK,OACLlB,KAAK,WACLC,MAAOH,KAAKd,MAAMK,SAClB8B,SAAU,SAACtB,GAAD,OAAO,EAAKuB,aAAavB,SAGvC,4CAEE,0BACEqB,KAAK,OACLlB,KAAK,UACLC,MAAOH,KAAKd,MAAMM,QAClB6B,SAAU,SAACtB,GAAD,OAAO,EAAKuB,aAAavB,SAGvC,0CAEE,uBACEqB,KAAK,OACLlB,KAAK,QACLC,MAAOH,KAAKd,MAAMC,MAClBkC,SAAU,SAACtB,GAAD,OAAO,EAAKuB,aAAavB,SAGvC,sEAEE,uBACEqB,KAAK,OACLlB,KAAK,eACLC,MAAOH,KAAKd,MAAME,aAClBiC,SAAU,SAACtB,GAAD,OAAO,EAAKuB,aAAavB,SAGvC,sDAEE,uBACEqB,KAAK,OACLlB,KAAK,WACLC,MAAOH,KAAKd,MAAMG,SAClBgC,SAAU,SAACtB,GAAD,OAAO,EAAKuB,aAAavB,SAIvC,uBAAOqB,KAAK,SAASjB,MAAM,cAE5BV,GAAS,qBAAKoB,UAAWC,IAAOrB,MAAvB,SAA+BA,IACxCiB,GAAe,qBAAKG,UAAWC,IAAOrB,MAAvB,SAA+BiB,c,GA5HpCa,aAgJNC,uBAbS,SAACtC,GACvB,MAAO,CACLwB,YAAaxB,EAAMuC,KAAKhC,MACxBgB,WAAYvB,EAAMuC,KAAKC,aAIA,SAACC,GAC1B,MAAO,CACLnB,WAAY,SAACoB,GAAD,OAAgBD,EAASE,YAAWD,QAIrCJ,CAA6CvC","file":"static/js/17.d929701e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"signupcontainer\":\"SignUp_signupcontainer__E4wpc\",\"error\":\"SignUp_error__RmcX7\",\"formcontainer\":\"SignUp_formcontainer__2NRLY\"};","/* NPM packages */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n/* css */\n\nimport styles from './SignUp.module.css';\n\n/* Action creators */\nimport { userSignUp } from '../Actions/users.js';\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    confirmEmail: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    error: null,\n  };\n\n  componentDidMount = () => {\n    let email = this.props.match.params.email;\n    this.setState({ email });\n  };\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    console.log(this.props);\n    e.preventDefault();\n\n    let {\n      email,\n      confirmEmail,\n      firstName,\n      lastName,\n      password,\n      address,\n    } = this.state;\n\n    if (\n      email &&\n      password &&\n      firstName &&\n      lastName &&\n      address &&\n      confirmEmail !== ''\n    ) {\n      this.setState({ error: null });\n      let data = { email, address, password, lastName, firstName };\n      this.props.signUserUp(data);\n    } else {\n      return this.setState({\n        error: 'Please complete all fields',\n      });\n    }\n  }\n\n  render() {\n    let { error } = this.state;\n    let { isSignedIn, serverError } = this.props;\n    if (isSignedIn) {\n      this.props.history.push('/');\n    }\n\n    return (\n      <div className={styles.signupcontainer}>\n        <h2>New customer</h2>\n        <span>\n          Already have an account?<Link to={'/sign-in'}>&nbsp;Sign in</Link>{' '}\n        </span>\n        <div className={styles.formcontainer}>\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <label>\n              First name\n              <input\n                type='text'\n                name='firstName'\n                value={this.state.firstName}\n                onChange={(e) => this.handleChange(e)}\n              />\n            </label>\n            <label>\n              Last name\n              <input\n                type='text'\n                name='lastName'\n                value={this.state.lastName}\n                onChange={(e) => this.handleChange(e)}\n              />\n            </label>\n            <label>\n              Address\n              <textarea\n                type='text'\n                name='address'\n                value={this.state.address}\n                onChange={(e) => this.handleChange(e)}\n              />\n            </label>\n            <label>\n              Email\n              <input\n                type='text'\n                name='email'\n                value={this.state.email}\n                onChange={(e) => this.handleChange(e)}\n              />\n            </label>\n            <label>\n              Please confirm your email address\n              <input\n                type='text'\n                name='confirmEmail'\n                value={this.state.confirmEmail}\n                onChange={(e) => this.handleChange(e)}\n              />\n            </label>\n            <label>\n              Create a password\n              <input\n                type='text'\n                name='password'\n                value={this.state.password}\n                onChange={(e) => this.handleChange(e)}\n              />\n            </label>\n\n            <input type='submit' value='Submit' />\n          </form>\n          {error && <div className={styles.error}>{error}</div>}\n          {serverError && <div className={styles.error}>{serverError}</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    serverError: state.user.error,\n    isSignedIn: state.user.signedIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUserUp: (signUpData) => dispatch(userSignUp(signUpData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n"],"sourceRoot":""}